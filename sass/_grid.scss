@use "sass:math";

$grid-columns: 12;

$grid-gaps: (
	"0": 0,
	"2": 0.125em,
	"4": 0.25em,
	"6": 0.5em,
	"8": 0.75em,
	"10": 1em,
	"12": 1.25em,
	"14": 1.5em,
);

$layout-values: flex-start, flex-end, center, space-between, space-around,
	space-evenly;

// base layout classes
.container {
	width: 100%;
	max-width: 1200px;
	margin: 0 auto;
}

.row {
	display: flex;
	flex-flow: row wrap;
}

@each $key, $value in $grid-gaps {
	.gap-#{$key} > * {
		padding: $value;
	}

	.gap-#{$key} {
		margin-left: -$value;
		margin-right: -$value;
	}
}

@each $value in $layout-values {
	.justify-#{$value} {
		justify-content: $value;
	}

	.align-#{$value} {
		align-items: $value;
	}
}

// col classes
@include xs {
	@for $i from 0 through $grid-columns {
		.col-#{$i}-xs {
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include sm {
	@for $i from 0 through $grid-columns {
		.col-#{$i}-sm {
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include md {
	@for $i from 0 through $grid-columns {
		.col-#{$i}-md {
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include lg {
	@for $i from 0 through $grid-columns {
		.col-#{$i}-lg {
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include xl {
	@for $i from 0 through $grid-columns {
		.col-#{$i}-xl {
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}
